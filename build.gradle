/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'michaelborodin' at '8/12/15 4:42 PM' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = '1.8'

mainClassName = 'com.pokerforfun.Main'
version='0.0.1-20150813'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

configurations {
    capsule
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile "org.slf4j:slf4j-api:1.7.12"    // the SLF4J API

    compile 'io.dropwizard:dropwizard-core:0.8.2'
    capsule 'co.paralleluniverse:capsule:1.0-rc1'

    compile 'com.google.dagger:dagger:2.0.1'
    compile 'com.google.dagger:dagger-compiler:2.0.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

run {
    systemProperty "dropwizard.config", "build/resources/main/restconfig.yml"
}

task capsule(type: Jar, dependsOn: classes) {
    archiveName = "fun-poker-${version}.jar"

    from jar // embed our application jar
    from { configurations.runtime } // embed dependencies
    from { sourceSets.main.resources } //embed config

    from(configurations.capsule.collect { zipTree(it) }) { include 'Capsule.class' } // we just need the single Capsule class

    manifest {
        attributes(
                'Main-Class'  :   'Capsule',
                'Application-Class'   : mainClassName,
                'Application-Version' : version,
                'Min-Java-Version' : '1.8.0',
                'JVM-Args' : run.jvmArgs.join(' '),
                'System-Properties' :
                        (run.systemProperties + ["dropwizard.config": '$CAPSULE_DIR/restconfig.yml'])
                                .collect { k,v -> "$k=$v" }.join(' '),
        )
    }
}
